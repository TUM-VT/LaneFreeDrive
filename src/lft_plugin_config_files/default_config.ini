[General Parameters]
collisions_file = collisions.csv
trajectory_file = trajectory.csv
lateral_speed_file = lateral_speed.csv
vehicle_info_file = vehicle_info.csv
circular_movement = 0
vehicle_init = SUMO			# Choose between RANDOM or SUMO. Uniform distrubtion is used for RANDOM.
speed_dist =				# Choose between NORMAL or UNIFORM or empty
min_desired_speed = 25.0
max_desired_speed = 35.0
seed = 0					# Random seed

[Desired Speed: Normal]
mu = 28,32					# The mean for multiple normal distributions can be combined into one distrubtion by separating them with comma.
sigma = 1,1					# Same as above for standard deviation

[RANDOM Init]
vehicle_types = Human_1		# Types of the random vehicles separated by comma. The vtype must be present in the SUMO route file.
vehicle_counts = 150		# Number of vehicles corresponding to the vehicle types.
routes = route0				# The route to be used. So far, only one route can be given.
min_distance_x = 5.3		# Minimum distance in x-aix between the vehicle centres
min_distance_y = 1.9		# Minimum distance in y-aix between the vehicle centres
lower_x = 0
upper_x = 1000
lower_y = 1.8
upper_y = 8.2

[Vehicle Models] # The vtype of the vehicle in SUMO route file should start with corresponding key, eg. AV_LFT
AV = PotentialLines
Human = StripBasedHuman

[Potential Lines Parameters]
ttcFile = ttc.csv		# The file containing the time to collision values for each vehicle. It can be used to estimate safety.
FrontDistance = 50
BackDistance = 50
PLForceModel = UNIFORM		# Choose between CDF or UNIFORM. CDF is the default model.
ForceIndex = 1.0
LowerLong = 1.2
UpperLong = 9.0
BoundaryControl = Proportional		# Hard or Proportional boundary control
wx1 = 0.7
wx2 = 0.7
wy = 0.5
n = 2
p = 2
q = 6
Li = 1.8
Wi = 1.3
kp1 = 1.0
kp2 = 0.65
k1_boundary = 4			# Used in Proportional boundary control for lateral difference to boundary
k2_boundary = 3.75		# Used for Proportional boundary control for lateral speed
pl_force_index = 0.12
nudge_index = 1.5
repulse_index = 1.5
ReactionTime = 0.5
MinSafeGap = 0		# Minimum safe gap between two vehicles in meters. This is used to calculate the safe velocity.
Deceleration = 4.5
Acceleration = 2.6	# Used to calculate the target speed force. This specially helps in the PL model to move the vehicle when it becomes stationary.
# A comma separated list of vehicle models for which the PL models should use safe velocity for exmaple, "Human,AV"
VSafeVehModels = Human,AV
# The following tuples for each parameters are used as hard constraints
lateral_acceleration_limits =
longitudinal_acceleration_limits =
lateral_jerk_limits =
longitudinal_jerk_limits =

[Adaptive Potential Lines Parameters]
# AdaptiveAlgorithm descries the algorithm used for Adaptive Potential Lines. The PLs are modified in the vicinity of Humans, refered to as APL corridor. 
# The following breifly describes them:
# ConstantMargin: APL corridor is made at a fixed distance (i.e. parameter ConstantMargin) behind all human drivers.
# NSCM: Same as ConstantMargin, but the corridor is made only if the human is driving slower than its surrounding vehicles.
# NAM: APL corridor is formed if the human is leader of any CAV (by looking upto AdaptiveFollowerDistance behind human). APL corridor is only made upto the follower CAV instead of a fixed distance.
# FAM: Same as NAM but with additional condition that the human is driving slower than surrounding vehicles. 
# SVAM: Same as FAM but with additional condition that the follower CAV is also limited by the safe velocity.
# AM: If there is a follower CAV, then NAM is applied; otherwise, ConstantMargin is applied.
# PythonRL: This strategy uses Python RL code to determine the APL margin used for the creation of APL corridors. The margins are read from using the file given using PythonMarginInputFile parameter.
AdaptiveAlgorithm = ConstantMargin
ConstantMargin = 10		# used in ConstantMargin, NSCM and AM strategies
AdaptiveFollowerDistance = 40	# used in NAM, FAM and SVAM strategies
PLForceModel = UNIFORM_ADAPTIVE
# Path to save the sync csv file used to share additional vehicle information with python script; mainly for visualization purpose.
SyncFile = 
# Path of the file used to synchronize the APL margin of each vehicle with the python RL code. It is only used when "PythonRL" is used as AdaptiveAlgorithm.
PythonMarginInputFile = 

[Strip Based Human Parameters]
StripWidth = 0.1		# meters
ReactionTime = RANDOM
ReactionTimeRange = 1.5,0.5
MinSafeGap = 0			# Minimum safe gap between two vehicles in meters. This is used to calculate the safe velocity.
FrontDistance = 50		# The front distance from which the leading vehicle is selected for longitudinal direction
Acceleration = 2.6		# m/s^2 taken from SUMO's default value
Deceleration = 4.5		# m/s^2 taken from SUMO's default value
MaxBrakeDeceleration = 2.6		# If the vehicle expects a collision with the leader, it uses this higher Deceleration to avoid it. It is specially useful when vehicle changes lateral position.
Lambda	= 0.1			# The parameter for considering the neibouring strips for lane-change
LaneChangeThreshold = 10
StripsChangeFile = strips_change.csv
